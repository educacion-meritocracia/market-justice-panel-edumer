group_by(id_estudiante) %>%
mutate(atricion = ifelse(all(c(1, 2) %in% ola), 1, 0)) %>%
ungroup()
data <- data %>% filter(atricion==1)
data <- data %>% mutate(mjp = rowMeans(select(., just_educ, just_salud, just_pensiones), na.rm = TRUE))
reg <- lmer(mjp ~ ola + genero_ES + perc_esfuerzo_soc + perc_talento_soc + perc_merit_soc + perc_padres_ricos + perc_contactos + pref_esfuerzo_soc + pref_talento_soc + pref_padres_ricos + pref_contactos + perc_esfuerzo_esc + perc_talento_esc + perc_merit_esc + (1+id_estudiante), data=data)
reg <- lmer(mjp ~ ola + genero_ES + perc_esfuerzo_soc + perc_talento_soc + perc_merit_soc + perc_padres_ricos + perc_contactos + pref_esfuerzo_soc + pref_talento_soc + pref_padres_ricos + pref_contactos + perc_esfuerzo_esc + perc_talento_esc + perc_merit_esc + (1|id_estudiante), data=data)
texreg::knitreg(reg)
reg.null <- lmer(mjp ~ (1|id_estudiante), data=data)
??ICC
performance::icc(reg.null)
#| label: setup
#| include: false
library(knitr)
knitr::opts_chunk$set(echo = F,
warning = F,
error = F,
message = F)
load(here::here("output/data/db_proc.RData"))
db_proc <- db_proc %>%
group_by(id_student) %>%
mutate(perc_merit_score_mean = mean(perc_merit_score, na.rm = T),
perc_merit_score_cwc = perc_merit_score - perc_merit_score_mean,
perc_nmerit_score_mean = mean(perc_nmerit_score, na.rm = T),
perc_nmerit_score_cwc = perc_nmerit_score - perc_nmerit_score_mean,
pref_merit_score_mean = mean(pref_merit_score, na.rm = T),
pref_merit_score_cwc = pref_merit_score - pref_merit_score_mean,
pref_nmerit_score_mean = mean(pref_nmerit_score, na.rm = T),
pref_nmerit_score_cwc = pref_nmerit_score - pref_nmerit_score_mean,
school_talent_mean = mean(school_talent, na.rm = T),
school_talent_cwc = school_talent - school_talent_mean,
school_effort_mean = mean(school_effort, na.rm = T),
school_effort_cwc = school_effort - school_effort_mean
) %>%
ungroup()
pacman::p_load(dplyr, car, sjmisc, sjPlot, sjlabelled, stargazer, kableExtra, corrplot, texreg, ggplot2, ggpubr, lavaan, haven, lme4, shadowtext)
db_proc <- db_proc %>%
group_by(id_student) %>%
mutate(perc_merit_score_mean = mean(perc_merit_score, na.rm = T),
perc_merit_score_cwc = perc_merit_score - perc_merit_score_mean,
perc_nmerit_score_mean = mean(perc_nmerit_score, na.rm = T),
perc_nmerit_score_cwc = perc_nmerit_score - perc_nmerit_score_mean,
pref_merit_score_mean = mean(pref_merit_score, na.rm = T),
pref_merit_score_cwc = pref_merit_score - pref_merit_score_mean,
pref_nmerit_score_mean = mean(pref_nmerit_score, na.rm = T),
pref_nmerit_score_cwc = pref_nmerit_score - pref_nmerit_score_mean,
school_talent_mean = mean(school_talent, na.rm = T),
school_talent_cwc = school_talent - school_talent_mean,
school_effort_mean = mean(school_effort, na.rm = T),
school_effort_cwc = school_effort - school_effort_mean
) %>%
ungroup()
db_1 <- subset(db_proc, wave == 1)
db_2 <- subset(db_proc, wave == 2)
model_cfa <- '
perc_merit = ~ perc_effort + perc_talent
perc_nmerit = ~ perc_rich_parents + perc_contact
pref_merit = ~ pref_effort + pref_talent
pref_nmerit = ~ pref_rich_parents + pref_contact
'
m1_cfa <- cfa(model = model_cfa,
data = db_1,
estimator = "DWLS",
ordered = T,
std.lv = F)
m2_cfa <- cfa(model = model_cfa,
data = db_2,
estimator = "DWLS",
ordered = T,
std.lv = F)
scores_1 <- lavPredict(m1_cfa)
scores_1 <- lavPredict(m1_cfa)
db_1$perc_merit_score  <- scores_1[, "perc_merit"]
db_1$perc_merit_score  <- scores_1[, "perc_merit"]
db_1$perc_nmerit_score <- scores_1[, "perc_nmerit"]
db_1$pref_merit_score  <- scores_1[, "pref_merit"]
db_1$pref_nmerit_score <- scores_1[, "pref_nmerit"]
scores_2 <- lavPredict(m2_cfa)
scores_2 <- lavPredict(m2_cfa)
db_2$perc_merit_score  <- scores_2[, "perc_merit"]
db_2$perc_nmerit_score <- scores_2[, "perc_nmerit"]
db_2$pref_merit_score  <- scores_2[, "pref_merit"]
db_2$pref_nmerit_score <- scores_2[, "pref_nmerit"]
db_proc <- rbind(db_1, db_2)
m1_cfa <- cfa(model = model_cfa,
data = db_1,
estimator = "DWLS",
ordered = T,
std.lv = F)
m2_cfa <- cfa(model = model_cfa,
data = db_2,
estimator = "DWLS",
ordered = T,
std.lv = F)
db_proc <- db_proc %>%
group_by(id_student) %>%
mutate(perc_merit_score_mean = mean(perc_merit_score, na.rm = T),
perc_merit_score_cwc = perc_merit_score - perc_merit_score_mean,
perc_nmerit_score_mean = mean(perc_nmerit_score, na.rm = T),
perc_nmerit_score_cwc = perc_nmerit_score - perc_nmerit_score_mean,
pref_merit_score_mean = mean(pref_merit_score, na.rm = T),
pref_merit_score_cwc = pref_merit_score - pref_merit_score_mean,
pref_nmerit_score_mean = mean(pref_nmerit_score, na.rm = T),
pref_nmerit_score_cwc = pref_nmerit_score - pref_nmerit_score_mean,
school_talent_mean = mean(school_talent, na.rm = T),
school_talent_cwc = school_talent - school_talent_mean,
school_effort_mean = mean(school_effort, na.rm = T),
school_effort_cwc = school_effort - school_effort_mean
) %>%
ungroup()
m0 <- lmer(mjp ~ 1 + (1 | id_student),
data = db_proc)
performance::icc(m0, by_group = T)
reg <- lmer(mjp ~ ola + genero_ES + perc_esfuerzo_soc + perc_talento_soc + perc_merit_soc + perc_padres_ricos + perc_contactos + pref_esfuerzo_soc + pref_talento_soc + pref_padres_ricos + pref_contactos + perc_esfuerzo_esc + perc_talento_esc + perc_merit_esc + (1|id_estudiante), data=data)
m5 <- lmer(mjp ~ 1 + perc_merit_score + perc_nmerit_score +
pref_merit_score + pref_nmerit_score + school_effort +
school_talent + perc_merit_score_mean + perc_nmerit_score_mean +
pref_merit_score_mean + pref_nmerit_score_mean +
school_effort_mean + school_talent_mean +
gender + age + books + parental_educ + cohort_level + wave +
(1 | id_student),
data = db_proc)
texreg::knitreg(m5)
m5 <- lmer(mjp ~ 1 + wave + cohort_level + gender +
perc_merit_score + perc_nmerit_score +
pref_merit_score + pref_nmerit_score + school_effort +
school_talent + perc_merit_score_mean + perc_nmerit_score_mean +
pref_merit_score_mean + pref_nmerit_score_mean +
school_effort_mean + school_talent_mean + books + parental_educ +
(1 | id_student),
data = db_proc)
texreg::knitreg(m5)
View(db_proc)
texreg::knitreg(m5)
m5 <- lmer(mjp ~ 1 + wave + cohort_level + gender +
perc_merit_score + perc_nmerit_score +
pref_merit_score + pref_nmerit_score + school_effort +
school_talent + perc_merit_score_mean + perc_nmerit_score_mean +
pref_merit_score_mean + pref_nmerit_score_mean +
school_effort_mean + school_talent_mean +
(1 | id_student),
data = db_proc)
sjPlot::plot_model(m5,
title = "", #quitar titulo
show.values = TRUE, #mostrar valor de efectos
dot.size = 1.3, #tamaño circulos
line.size = 1, #tamaño CI
value.size = 3.5, #tamaño valor efectoss
spacing = .7, #espacio entre efectos
vline.color = "red", # linea roja en punto neutro (1)
axis.labels = rev(c("Ola 2 (ref: ola 1)",
"Secundaria (ref: primaria)",
"Mujer (ref: Hombre)",
"Percepción: meritocracia (WE)",
"Percepción: no meritocracia (WE)",
"Preferencia: meritocracia (WE)",
"Preferencia: no meritocracia (WE)",
"Percepción: esfuerzo escuela (WE)",
"Percepción: talento escuela (WE)",
"Percepción: meritocracia (BE)",
"Percepción: no meritocracia (BE)",
"Preferencia: meritocracia (BE)",
"Preferencia: no meritocracia (BE)",
"Percepción: esfuerzo escuela (BE)",
))
)+
theme_bw(base_size=14)
texreg::knitreg(m5)
))
sjPlot::plot_model(m5,
title = "", # Quitar título
show.values = TRUE, # Mostrar valores de efectos
dot.size = 1.3, # Tamaño de los puntos
line.size = 1, # Tamaño de las líneas de IC
value.size = 3.5, # Tamaño de los valores
spacing = .7, # Espaciado entre efectos
vline.color = "red", # Línea roja en 1
axis.labels = rev(c(
"Ola 2 (ref: ola 1)",
"Secundaria (ref: primaria)",
"Mujer (ref: Hombre)",
"Otro (ref: Hombre)",
"—— Within Effects (WE) ——",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela",
"", # Espacio en blanco para separación
"—— Between Effects (BE) ——",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela"
))
) +
theme_bw(base_size=14)
?plot_model
sjPlot::plot_model(m5,
title = "", # Quitar título
show.values = TRUE, # Mostrar valores de efectos
dot.size = 1.3, # Tamaño de los puntos
line.size = 1, # Tamaño de las líneas de IC
value.size = 3.5, # Tamaño de los valores
spacing = .7, # Espaciado entre efectos
vline.color = "red", # Línea roja en 1
axis.labels = rev(c("Ola 2 (ref: ola 1)",
"Secundaria (ref: primaria)",
"Mujer (ref: Hombre)",
"Otro (ref: Hombre)",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela")),
group.terms = list(
"Within Effects (WE)" = c("Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela"),
"Between Effects (BE)" = c("Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela")
)
) +
theme_bw(base_size=14)
) +
sjPlot::plot_model(m5,
title = "", # Quitar título
show.values = TRUE, # Mostrar valores de efectos
dot.size = 1.3, # Tamaño de los puntos
line.size = 1, # Tamaño de las líneas de IC
value.size = 3.5, # Tamaño de los valores
spacing = .7, # Espaciado entre efectos
vline.color = "red", # Línea roja en 1
axis.labels = rev(c("Ola 2 (ref: ola 1)",
"Secundaria (ref: primaria)",
"Mujer (ref: Hombre)",
"Otro (ref: Hombre)",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela")),
group.terms = list(
"Within Effects (WE)" = c("Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela"),
"Between Effects (BE)" = c("Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela")
)
) +
theme_bw(base_size=14)
sjPlot::plot_model(m5,
title = "", # Quitar título
show.values = TRUE, # Mostrar valores de efectos
dot.size = 1.3, # Tamaño de los puntos
line.size = 1, # Tamaño de las líneas de IC
value.size = 3.5, # Tamaño de los valores
spacing = .7, # Espaciado entre efectos
vline.color = "red", # Línea roja en 1
axis.labels = rev(c("Ola 2 (ref: ola 1)",
"Secundaria (ref: primaria)",
"Mujer (ref: Hombre)",
"Otro (ref: Hombre)",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela")),
group.terms = c(1, 1, 1, 1, 2, 2, 2,2,2,2,3,3,3,3,3,3)
) +
theme_bw(base_size=14)
sjPlot::plot_model(m5,
title = "", # Quitar título
show.values = TRUE, # Mostrar valores de efectos
dot.size = 1.3, # Tamaño de los puntos
line.size = 1, # Tamaño de las líneas de IC
value.size = 3.5, # Tamaño de los valores
spacing = .7, # Espaciado entre efectos
vline.color = "red", # Línea roja en 1
value.offset = 0.5,
axis.labels = rev(c("Ola 2 (ref: ola 1)",
"Secundaria (ref: primaria)",
"Mujer (ref: Hombre)",
"Otro (ref: Hombre)",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela")),
group.terms = c(1, 1, 1, 1, 2, 2, 2,2,2,2,3,3,3,3,3,3)
) +
theme_bw(base_size=14)
sjPlot::plot_model(m5,
title = "", # Quitar título
show.values = TRUE, # Mostrar valores de efectos
dot.size = 1.3, # Tamaño de los puntos
line.size = 1, # Tamaño de las líneas de IC
value.size = 3.5, # Tamaño de los valores
spacing = .7, # Espaciado entre efectos
vline.color = "red", # Línea roja en 1
value.offset = 0.4,
axis.labels = rev(c("Ola 2 (ref: ola 1)",
"Secundaria (ref: primaria)",
"Mujer (ref: Hombre)",
"Otro (ref: Hombre)",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela")),
group.terms = c(1, 1, 1, 1, 2, 2, 2,2,2,2,3,3,3,3,3,3)
) +
theme_bw(base_size=14)
sjPlot::plot_model(m5,
title = "", # Quitar título
show.values = TRUE, # Mostrar valores de efectos
dot.size = 1.3, # Tamaño de los puntos
line.size = 1, # Tamaño de las líneas de IC
value.size = 3.5, # Tamaño de los valores
spacing = .7, # Espaciado entre efectos
vline.color = "red", # Línea roja en 1
value.offset = 0.3,
axis.labels = rev(c("Ola 2 (ref: ola 1)",
"Secundaria (ref: primaria)",
"Mujer (ref: Hombre)",
"Otro (ref: Hombre)",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela")),
group.terms = c(1, 1, 1, 1, 2, 2, 2,2,2,2,3,3,3,3,3,3)
) +
theme_bw(base_size=14)
sjPlot::plot_model(m5,
title = "", # Quitar título
show.values = TRUE, # Mostrar valores de efectos
dot.size = 1.3, # Tamaño de los puntos
line.size = 1, # Tamaño de las líneas de IC
value.size = 3.5, # Tamaño de los valores
spacing = .7, # Espaciado entre efectos
vline.color = "red", # Línea roja en 1
value.offset = 0.35,
axis.labels = rev(c("Ola 2 (ref: ola 1)",
"Secundaria (ref: primaria)",
"Mujer (ref: Hombre)",
"Otro (ref: Hombre)",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela",
"Percepción: meritocracia",
"Percepción: no meritocracia",
"Preferencia: meritocracia",
"Preferencia: no meritocracia",
"Percepción: esfuerzo escuela",
"Percepción: talento escuela")),
group.terms = c(1, 1, 1, 1, 2, 2, 2,2,2,2,3,3,3,3,3,3)
) +
theme_bw(base_size=14)
#| label: setup
#| include: false
library(knitr)
knitr::opts_chunk$set(echo = F,
warning = F,
error = F,
message = F)
#| label: packages
#| include: false
if (! require("pacman")) install.packages("pacman")
pacman::p_load(dplyr, car, sjmisc, sjPlot, sjlabelled, stargazer, kableExtra, corrplot, texreg, ggplot2, ggpubr, lavaan, haven, lme4, shadowtext)
options(scipen=999)
rm(list = ls())
load(here::here("../../input/data/proc/data.RData"))
pacman::p_load(dplyr, car, sjmisc, sjPlot, sjlabelled, stargazer, kableExtra, corrplot, texreg, ggplot2, ggpubr, lavaan, haven, lme4, shadowtext)
options(scipen=999)
rm(list = ls())
load(here::here("input/data/proc/data.RData"))
data <- data %>%
mutate(curso_estudiante = case_when(
grepl("^(2|1)", curso_estudiante, ignore.case = TRUE) ~ 'Media',
grepl("^(7|6)", curso_estudiante, ignore.case = TRUE) ~ 'Basica',
TRUE ~ curso_estudiante  # mantener el valor original si no coincide con ninguna condición
))
data <- data  %>% group_by(id_estudiante) %>%
mutate(curso_estudiante_rec = ifelse(ola == 2 & is.na(curso_estudiante),
curso_estudiante[ola == 1],
curso_estudiante)) %>% ungroup()
data <- data %>%
group_by(id_estudiante) %>%
mutate(atricion = ifelse(all(c(1, 2) %in% ola), 1, 0)) %>%
ungroup()
data <- data %>% filter(atricion==1)
load(here::here("output/data/db_proc.RData"))
db_1 <- subset(db_proc, wave == 1)
db_2 <- subset(db_proc, wave == 2)
model_cfa <- '
perc_merit = ~ perc_effort + perc_talent
perc_nmerit = ~ perc_rich_parents + perc_contact
pref_merit = ~ pref_effort + pref_talent
pref_nmerit = ~ pref_rich_parents + pref_contact
'
m1_cfa <- cfa(model = model_cfa,
data = db_1,
estimator = "DWLS",
ordered = T,
std.lv = F)
m2_cfa <- cfa(model = model_cfa,
data = db_2,
estimator = "DWLS",
ordered = T,
std.lv = F)
scores_1 <- lavPredict(m1_cfa)
db_1$perc_merit_score  <- scores_1[, "perc_merit"]
db_1$perc_nmerit_score <- scores_1[, "perc_nmerit"]
db_1$pref_merit_score  <- scores_1[, "pref_merit"]
db_1$pref_nmerit_score <- scores_1[, "pref_nmerit"]
scores_2 <- lavPredict(m2_cfa)
db_2$perc_merit_score  <- scores_2[, "perc_merit"]
db_2$perc_nmerit_score <- scores_2[, "perc_nmerit"]
db_2$pref_merit_score  <- scores_2[, "pref_merit"]
db_2$pref_nmerit_score <- scores_2[, "pref_nmerit"]
db_proc <- rbind(db_1, db_2)
db_proc <- db_proc %>%
group_by(id_student) %>%
mutate(perc_merit_score_mean = mean(perc_merit_score, na.rm = T),
perc_merit_score_cwc = perc_merit_score - perc_merit_score_mean,
perc_nmerit_score_mean = mean(perc_nmerit_score, na.rm = T),
perc_nmerit_score_cwc = perc_nmerit_score - perc_nmerit_score_mean,
pref_merit_score_mean = mean(pref_merit_score, na.rm = T),
pref_merit_score_cwc = pref_merit_score - pref_merit_score_mean,
pref_nmerit_score_mean = mean(pref_nmerit_score, na.rm = T),
pref_nmerit_score_cwc = pref_nmerit_score - pref_nmerit_score_mean,
school_talent_mean = mean(school_talent, na.rm = T),
school_talent_cwc = school_talent - school_talent_mean,
school_effort_mean = mean(school_effort, na.rm = T),
school_effort_cwc = school_effort - school_effort_mean
) %>%
ungroup()
m0 <- lmer(mjp ~ 1 + (1 | id_student),
data = db_proc)
performance::icc(m0, by_group = T)
m5 <- lmer(mjp ~ 1 + wave + cohort_level + gender +
perc_merit_score + perc_nmerit_score +
pref_merit_score + pref_nmerit_score + school_effort +
school_talent + perc_merit_score_mean + perc_nmerit_score_mean +
pref_merit_score_mean + pref_nmerit_score_mean +
school_effort_mean + school_talent_mean +
(1 | id_student),
data = db_proc)
names(db_proc)
